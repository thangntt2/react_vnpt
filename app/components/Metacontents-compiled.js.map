{"version":3,"sources":["Metacontents.js"],"names":[],"mappings":"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","file":"Metacontents-compiled.js","sourcesContent":["import React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport {Button, FormGroup, FormControl, ControlLabel, Form, FieldGroup} from 'react-bootstrap'\nimport {searchWikiMetacontents, searchNewsMetacontents, queryWikiMetacontents} from '../apis/Metacontents'\nimport Select from 'react-select'\nimport {submitMetacontent} from '../actions'\n\nclass Metacontent extends React.Component {\n\tconstructor (props) {\n\t\tsuper(props)\n    this.state = {entity_type: 'Location', search_term:\"\",\n      entity: {\n        name: '',\n        description: '',\n        url: '',\n        image: '',\n      }\n\t\t}\n    this._show_metacontens = this._show_metacontens.bind(this)\n\t\tthis._create_metacontent = this._create_metacontent.bind(this)\n\t}\n\n\t_show_metacontens() {\n\n\t}\n\n\t_search_metacontents() {\n\t  let name = this.refs.search_entity.value\n    if (this.state.entity_type == 'Article') {\n      searchNewsMetacontents(name)\n        .then(function(metacontents) {\n\n        })\n    } else {\n      searchWikiMetacontents(name)\n        .then(function(metacontents) {\n\n        })\n    }\n  }\n\n  _handle(event) {\n    this.setState({entity_type: event.target.value})\n  }\n\n  _onChange(value) {\n    this.setState({\n      search_term: value\n    })\n    queryWikiMetacontents(value.value)\n      .then(value => {\n        this.setState({entity: value})\n      })\n  }\n\n  _getEntities(inputText) {\n    return searchWikiMetacontents(inputText)\n      .then(res => {\n        console.log(res)\n        let ret = res.map(function(entity) {\n          return {value: entity, label: entity}\n        })\n        console.log(ret)\n        return {options: ret}\n      })\n  }\n\n\t_create_metacontent() {\n\t  let self = this\n\t\treturn (\n\t\t\t<div className='box-body'>\n        <Select.Async\n          value={self.state.search_term}\n          ref=\"live_search_input\"\n          onChange={self._onChange.bind(self)}\n          loadOptions={self._getEntities.bind(self)}\n          minimumInput={3}\n          valueKey=\"value\" labelKey=\"label\"\n          backspaceRemoves={false}\n          ignoreAccents={false}\n        />\n        <Form>\n          <FormGroup controlId=\"formControlsTextarea\">\n            <ControlLabel>Name</ControlLabel>\n            <FormControl componentClass=\"textarea\" ref=\"name\" placeholder=\"Name\"\n                         value={this.state.entity.name}/>\n          </FormGroup>\n          <FormGroup controlId=\"formControlsTextarea\">\n            <ControlLabel>Description</ControlLabel>\n            <FormControl componentClass=\"textarea\" ref=\"description\" placeholder=\"Description\"\n                         value={this.state.entity.description}/>\n          </FormGroup>\n          <FormGroup controlId=\"formControlsTextarea\">\n            <ControlLabel>Image</ControlLabel>\n            <FormControl componentClass=\"textarea\" ref=\"image\" placeholder=\"Image\"\n                         value={this.state.entity.image}/>\n          </FormGroup>\n          <FormGroup controlId=\"formControlsTextarea\">\n            <ControlLabel>URL</ControlLabel>\n            <FormControl componentClass=\"textarea\" ref=\"url\" placeholder=\"URL\"\n                         value={this.state.entity.url}/>\n          </FormGroup>\n          <ControlLabel>Loại</ControlLabel>\n          <FormControl componentClass=\"select\" bsStyle=\"primary\" ref=\"category\" placeholder=\"Loại\"\n             onChange={self._handle.bind(self)} value={self.state.entity_type}>\n            <option value=\"Location\">Địa danh</option>\n            <option value=\"Person\">Nhân vật</option>\n            <option value=\"Organization\">Tổ chức</option>\n            <option value=\"Article\">Bài viết</option>\n          </FormControl>\n          <FormGroup controlId=\"formControlsSelect\">\n            <ControlLabel>Kênh</ControlLabel>\n            <FormControl componentClass=\"select\" placeholder=\"Kênh\">\n              <option value=\"VTV1\">VTV1</option>\n              <option value=\"VTV3\">VTV3</option>\n              <option value=\"VTV1 HD\">VTV1 HD</option>\n              <option value=\"VTV3 HD\">VTV3 HD</option>\n            </FormControl>\n          </FormGroup>\n\n          <Button type=\"submit\" bsStyle=\"primary\" onClick={self._submit.bind(self)}>\n              Submit\n            </Button>\n        </Form>\n\t\t\t</div>\n\t\t)\n\t}\n\n  _submit() {\n    metacontent = {\n      name: this.refs.name.value,\n      description: this.refs.description.value,\n      image: this.refs.image,\n      url: this.refs.url,\n      category: this.refs.category,\n    }\n\n    submitMetacontent(metacontent)\n  }\n\n\trender() {\n\t\treturn this._create_metacontent()\n\t}\n}\n\nMetacontent.propTypes = {\n\tdata : React.PropTypes.object,\n\tdispatch: React.PropTypes.func,\n}\n\n// // Which props do we want to inject, given the global state?\nfunction select (state) {\n  return {\n    data: state,\n  }\n}\n\n// Wrap the component to inject dispatch and state into it\nexport default connect(select)(Metacontent)\n"]}