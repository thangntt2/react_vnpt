{"version":3,"sources":["Form.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;;;AACA;;;;AAEA;;;;IAEM,I;;;AACJ,gBAAa,KAAb,EAAoB;AAAA;;AAAA,8GACZ,KADY;;AAGlB,UAAK,SAAL,GAAiB,MAAK,SAAL,CAAe,IAAf,OAAjB;AACA,UAAK,eAAL,GAAuB,MAAK,eAAL,CAAqB,IAArB,OAAvB;AACA,UAAK,eAAL,GAAuB,MAAK,eAAL,CAAqB,IAArB,OAAvB;AALkB;AAMnB;;;;6BACS;AAAA,UACH,KADG,GACM,KAAK,KADX,CACH,KADG;;;AAGR,aACE;AAAA;AAAA,UAAM,WAAU,MAAhB,EAAuB,UAAU,KAAK,SAAtC;AACG,gBAAQ,wDAAc,OAAO,KAArB,GAAR,GAAyC,IAD5C;AAEE;AAAA;AAAA,YAAK,WAAU,qBAAf;AACE;AACE,uBAAU,mBADZ;AAEE,kBAAK,MAFP;AAGE,gBAAG,UAHL;AAIE,mBAAO,KAAK,KAAL,CAAW,IAAX,CAAgB,QAJzB;AAKE,yBAAY,iBALd;AAME,sBAAU,KAAK,eANjB;AAOE,yBAAY,KAPd;AAQE,4BAAe,KARjB;AASE,wBAAW,OATb,GADF;AAWE;AAAA;AAAA,cAAO,WAAU,mBAAjB,EAAqC,SAAQ,UAA7C;AAAA;AAAA;AAXF,SAFF;AAiBE;AAAA;AAAA,YAAK,WAAU,qBAAf;AACE;AACE,uBAAU,mBADZ;AAEE,gBAAG,UAFL;AAGE,kBAAK,UAHP;AAIE,mBAAO,KAAK,KAAL,CAAW,IAAX,CAAgB,QAJzB;AAKE,yBAAY,YALd;AAME,sBAAU,KAAK,eANjB,GADF;AAQE;AAAA;AAAA,cAAO,WAAU,mBAAjB,EAAqC,SAAQ,UAA7C;AAAA;AAAA;AARF,SAjBF;AA6BE;AAAA;AAAA,YAAK,WAAU,0BAAf;AACG,eAAK,KAAL,CAAW,gBAAX,GACC,4DADD,GAGC;AAAA;AAAA,cAAQ,WAAU,kBAAlB,EAAqC,MAAK,QAA1C;AACI,iBAAK,KAAL,CAAW;AADf;AAJJ;AA7BF,OADF;AAyCD;;;oCAEgB,K,EAAO;AACtB,WAAK,WAAL,4BAAqB,KAAK,KAAL,CAAW,IAAhC,IAAsC,UAAU,MAAM,MAAN,CAAa,KAA7D;AACD;;;oCAEgB,K,EAAO;AACtB,WAAK,WAAL,4BAAqB,KAAK,KAAL,CAAW,IAAhC,IAAsC,UAAU,MAAM,MAAN,CAAa,KAA7D;AACD;;;gCAEY,Y,EAAc;AACzB,WAAK,KAAL,CAAW,QAAX,CAAoB,yBAAW,YAAX,CAApB;AACD;;;8BAEU,K,EAAO;AAChB,YAAM,cAAN;AACA,WAAK,KAAL,CAAW,QAAX,CAAoB,KAAK,KAAL,CAAW,IAAX,CAAgB,QAApC,EAA8C,KAAK,KAAL,CAAW,IAAX,CAAgB,QAA9D;AACD;;;;;AAGH,KAAK,SAAL,GAAiB;AACf,YAAU,gBAAM,SAAN,CAAgB,IADX;AAEf,QAAM,gBAAM,SAAN,CAAgB,MAFP;AAGf,YAAU,gBAAM,SAAN,CAAgB,IAHX;AAIf,cAAY,gBAAM,SAAN,CAAgB,IAJb;AAKf,WAAS,gBAAM,SAAN,CAAgB,MALV;AAMf,SAAO,gBAAM,SAAN,CAAgB,MANR;AAOf,oBAAkB,gBAAM,SAAN,CAAgB;AAPnB,CAAjB;;kBAUe,I","file":"Form-compiled.js","sourcesContent":["import React, {Component} from 'react'\nimport ErrorMessage from './ErrorMessage'\nimport LoadingButton from './LoadingButton'\n\nimport {changeForm} from '../../actions'\n\nclass Form extends Component {\n  constructor (props) {\n    super(props)\n\n    this._onSubmit = this._onSubmit.bind(this)\n    this._changeUsername = this._changeUsername.bind(this)\n    this._changePassword = this._changePassword.bind(this)\n  }\n  render () {\n    let {error} = this.props\n\n    return (\n      <form className='form' onSubmit={this._onSubmit}>\n        {error ? <ErrorMessage error={error} /> : null}\n        <div className='form__field-wrapper'>\n          <input\n            className='form__field-input'\n            type='text'\n            id='username'\n            value={this.props.data.username}\n            placeholder='frank.underwood'\n            onChange={this._changeUsername}\n            autoCorrect='off'\n            autoCapitalize='off'\n            spellCheck='false' />\n          <label className='form__field-label' htmlFor='username'>\n            Username\n          </label>\n        </div>\n        <div className='form__field-wrapper'>\n          <input\n            className='form__field-input'\n            id='password'\n            type='password'\n            value={this.props.data.password}\n            placeholder='••••••••••'\n            onChange={this._changePassword} />\n          <label className='form__field-label' htmlFor='password'>\n            Password\n          </label>\n        </div>\n        <div className='form__submit-btn-wrapper'>\n          {this.props.currentlySending ? (\n            <LoadingButton />\n          ) : (\n            <button className='form__submit-btn' type='submit'>\n               {this.props.btnText}\n            </button>\n             )}\n        </div>\n      </form>\n    )\n  }\n\n  _changeUsername (event) {\n    this._emitChange({...this.props.data, username: event.target.value})\n  }\n\n  _changePassword (event) {\n    this._emitChange({...this.props.data, password: event.target.value})\n  }\n\n  _emitChange (newFormState) {\n    this.props.dispatch(changeForm(newFormState))\n  }\n\n  _onSubmit (event) {\n    event.preventDefault()\n    this.props.onSubmit(this.props.data.username, this.props.data.password)\n  }\n}\n\nForm.propTypes = {\n  dispatch: React.PropTypes.func,\n  data: React.PropTypes.object,\n  onSubmit: React.PropTypes.func,\n  changeForm: React.PropTypes.func,\n  btnText: React.PropTypes.string,\n  error: React.PropTypes.string,\n  currentlySending: React.PropTypes.bool\n}\n\nexport default Form\n"]}