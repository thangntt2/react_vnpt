{"version":3,"sources":["Sidebar.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;AACA;;AACA;;AACA;;;;IAEM,O;;;AACL,kBAAY,KAAZ,EAAmB;AAAA;;AAAA,+GACZ,KADY;;AAElB,QAAK,KAAL,GAAa,EAAC,YAAa,MAAM,UAApB,EAAb;AACA,QAAK,eAAL,GAAuB,MAAK,eAAL,CAAqB,IAArB,OAAvB;AAHkB;AAIlB;;;;kCACe,S,EAAW;AACvB,QAAK,QAAL,CAAc,EAAC,YAAW,UAAU,EAAtB,EAAd;AACA,WAAQ,UAAU,EAAlB;AACC,SAAK,UAAL;AACC,UAAK,KAAL,CAAW,QAAX,CAAoB,+BAApB;AACA;AACD,SAAK,cAAL;AACC,UAAK,KAAL,CAAW,QAAX,CAAoB,kCAApB;AACA;AACC,SAAK,WAAL;AACE,iCAAe,IAAf,CAAoB,YAApB;AACA;AATL;AAWH;;;2BACQ;AACL,OAAI,OAAO,CACP,EAAE,IAAI,WAAN,EAAmB,MAAM,MAAzB,EADO,EAEP,EAAE,IAAI,UAAN,EAAkB,MAAM,MAAxB,EAFO,EAGP,EAAE,IAAI,cAAN,EAAsB,MAAM,cAA5B,EAHO,EAIP,EAAE,IAAI,UAAN,EAAkB,MAAM,SAAxB,EAJO,CAAX;AADK,OAOA,QAPA,GAOY,KAAK,KAPjB,CAOA,QAPA;;AAQL,UACC;AAAA;AAAA,MAAK,WAAU,iBAAf;AACI;AACG,eAAU,KAAK,KAAL,CAAW,UADxB;AAEG,WAAM,IAFT;AAGG,kBAAa,KAAK,eAHrB;AADJ,IADD;AASH;;;EArCoB,gBAAM,S;;AAsC3B;;AAED,QAAQ,SAAR,GAAoB;AACnB,aAAa,gBAAM,SAAN,CAAgB,MADV;AAEnB,WAAU,gBAAM,SAAN,CAAgB;AAFP,CAApB;;AAKA;AACA,SAAS,MAAT,CAAiB,KAAjB,EAAwB;AACtB,QAAO;AACL,QAAM;AADD,EAAP;AAGD;;AAED;kBACe,yBAAQ,MAAR,EAAgB,OAAhB,C","file":"Sidebar-compiled.js","sourcesContent":["import React, {Component} from 'react'\nimport { SideNav, Nav } from 'react-sidenav';\nimport {connect} from 'react-redux'\nimport { getChannelsList, getAllMetacontents} from '../actions'\nimport {browserHistory} from 'react-router'\n\nclass Sidebar extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {selectedSB : props.selectedSB};\n\t\tthis.updateSelection = this.updateSelection.bind(this);\n\t}\n\tupdateSelection(selection) {\n\t    this.setState({selectedSB:selection.id});\n\t    switch (selection.id) {\n\t    \tcase 'channels':\n\t    \t\tthis.props.dispatch(getChannelsList())\n\t    \t\tbreak\n\t    \tcase 'metacontents':\n\t    \t\tthis.props.dispatch(getAllMetacontents())\n\t    \t\tbreak\n        case 'dashboard':\n          browserHistory.push('/dashboard')\n          break;\n\t    }\n\t};\n\trender() {\n\t    var navi = [\n\t        { id: 'dashboard', text: 'Home'},\n\t        { id: 'channels', text: 'KÃªnh'},\n\t        { id: 'metacontents', text: 'Metacontents'},\n\t        { id: 'keywords', text: 'Keyword' }\n\t    ];\n    \tlet {dispatch} = this.props;\n\t    return (\n\t    \t<div className='sidebar_wrapper'>\n\t\t        <SideNav\n\t\t          \tselected={this.state.selectedSB}\n\t\t          \tnavs={navi}\n\t\t          \tonSelection={this.updateSelection}>\n\t\t        </SideNav>\n\t        </div>\n\t    )\n\t}\n};\n\nSidebar.propTypes = {\n\tselectedSB : React.PropTypes.object,\n\tdispatch: React.PropTypes.func,\n}\n\n// Which props do we want to inject, given the global state?\nfunction select (state) {\n  return {\n    data: state\n  }\n}\n\n// Wrap the component to inject dispatch and state into it\nexport default connect(select)(Sidebar)\n"]}