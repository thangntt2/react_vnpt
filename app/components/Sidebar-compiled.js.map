{"version":3,"sources":["Sidebar.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;AACA;;AACA;;;;IAEM,O;;;AACL,mBAAY,KAAZ,EAAmB;AAAA;;AAAA,iHACZ,KADY;;AAElB,UAAK,KAAL,GAAa,EAAC,YAAa,MAAM,UAApB,EAAb;AACA,UAAK,eAAL,GAAuB,MAAK,eAAL,CAAqB,IAArB,OAAvB;AAHkB;AAIlB;;;;oCACe,S,EAAW;AACvB,WAAK,QAAL,CAAc,EAAC,YAAW,UAAU,EAAtB,EAAd;AACA,cAAQ,UAAU,EAAlB;AACC,aAAK,UAAL;AACC,sCAAe,IAAf,CAAoB,WAApB;AACA;AACD,aAAK,mBAAL;AACC,sCAAe,IAAf,CAAoB,eAApB;AACA;AACC,aAAK,qBAAL;AACE,sCAAe,IAAf,CAAoB,sBAApB;AACA;AACF,aAAK,WAAL;AACE,sCAAe,IAAf,CAAoB,YAApB;AACA;AACF,aAAK,cAAL;AACE,sCAAe,IAAf,CAAoB,UAApB;AACA;AACF,aAAK,gBAAL;AACE,sCAAe,IAAf,CAAoB,iBAApB;AACA;AAlBL;AAoBH;;;6BACQ;AACL,UAAI,OAAO,CACP,EAAE,IAAI,WAAN,EAAmB,MAAM,MAAzB,EADO,EAEP,EAAE,IAAI,UAAN,EAAkB,MAAM,MAAxB,EAFO,EAGN;AACE,YAAI,cADN,EACsB,MAAM,cAD5B;AAEE,iBAAS,CACP,EAAC,IAAI,mBAAL,EAA0B,MAAM,MAAhC,EADO,EAEP,EAAC,IAAI,qBAAL,EAA4B,MAAM,QAAlC,EAFO;AAFX,OAHM,EAUP,EAAE,IAAI,UAAN,EAAkB,MAAM,SAAxB;AACG,iBAAS,CACP,EAAC,IAAI,cAAL,EAAqB,MAAM,MAA3B,EADO,EAEP,EAAC,IAAI,gBAAL,EAAuB,MAAM,QAA7B,EAFO;AADZ,OAVO,CAAX;AAiBA,aACC;AAAA;AAAA,UAAK,WAAU,iBAAf;AACI;AACG,oBAAU,KAAK,KAAL,CAAW,UADxB;AAEG,gBAAM,IAFT;AAGG,uBAAa,KAAK,eAHrB;AADJ,OADD;AASH;;;EAxDoB,gBAAM,S;;AAyD3B;;AAED,QAAQ,SAAR,GAAoB;AACnB,cAAa,gBAAM,SAAN,CAAgB,MADV;AAEnB,YAAU,gBAAM,SAAN,CAAgB;AAFP,CAApB;;AAKA;AACA,SAAS,MAAT,CAAiB,KAAjB,EAAwB;AACtB,SAAO;AACL,UAAM;AADD,GAAP;AAGD;;AAED;kBACe,yBAAQ,MAAR,EAAgB,OAAhB,C","file":"Sidebar-compiled.js","sourcesContent":["import React, {Component} from 'react'\nimport { SideNav} from 'react-sidenav';\nimport {connect} from 'react-redux'\nimport {browserHistory} from 'react-router'\n\nclass Sidebar extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {selectedSB : props.selectedSB};\n\t\tthis.updateSelection = this.updateSelection.bind(this);\n\t}\n\tupdateSelection(selection) {\n\t    this.setState({selectedSB:selection.id});\n\t    switch (selection.id) {\n\t    \tcase 'channels':\n\t    \t\tbrowserHistory.push('/channels')\n\t    \t\tbreak\n\t    \tcase 'metacontents_show':\n\t    \t\tbrowserHistory.push('/metacontents')\n\t    \t\tbreak\n        case 'metacontents_create':\n          browserHistory.push('/metacontents/create')\n          break\n        case 'dashboard':\n          browserHistory.push('/dashboard')\n          break;\n        case 'keyword_show':\n          browserHistory.push('/keyword')\n          break\n        case 'keyword_create':\n          browserHistory.push('/keyword/create')\n          break\n\t    }\n\t};\n\trender() {\n\t    var navi = [\n\t        { id: 'dashboard', text: 'Home'},\n\t        { id: 'channels', text: 'KÃªnh'},\n          {\n            id: 'metacontents', text: 'Metacontents',\n            navlist: [\n              {id: 'metacontents_show', text: 'Show'},\n              {id: 'metacontents_create', text: 'Create'},\n            ]\n          },\n\t        { id: 'keywords', text: 'Keyword' ,\n            navlist: [\n              {id: 'keyword_show', text: 'Show'},\n              {id: 'keyword_create', text: 'Create'}\n            ]\n          }\n\t    ];\n\t    return (\n\t    \t<div className='sidebar_wrapper'>\n\t\t        <SideNav\n\t\t          \tselected={this.state.selectedSB}\n\t\t          \tnavs={navi}\n\t\t          \tonSelection={this.updateSelection}>\n\t\t        </SideNav>\n\t        </div>\n\t    )\n\t}\n};\n\nSidebar.propTypes = {\n\tselectedSB : React.PropTypes.object,\n\tdispatch: React.PropTypes.func,\n}\n\n// Which props do we want to inject, given the global state?\nfunction select (state) {\n  return {\n    data: state\n  }\n}\n\n// Wrap the component to inject dispatch and state into it\nexport default connect(select)(Sidebar)\n"]}