{"version":3,"sources":["CreateMetacontents.js"],"names":[],"mappings":"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","file":"CreateMetacontents-compiled.js","sourcesContent":["import React, {Component, ReactDOM} from 'react'\nimport {connect} from 'react-redux'\nimport {Panel, Button, Checkbox, FormGroup, FormControl, ControlLabel, Form, FieldGroup} from 'react-bootstrap'\nimport {searchWikiMetacontents, searchNewsMetacontents, queryWikiMetacontents} from '../apis/Metacontents'\nimport Select from 'react-select'\nimport {submitMetacontent, createMetacontent, editMetacontent} from '../actions'\nimport {queryNewsMetacontents} from \"../apis/Metacontents\";\nvar Keypress = require(\"react-keypress\");\n\nclass CreateMetacontent extends React.Component {\n\tconstructor (props) {\n\t\tsuper(props)\n    this.state = {search_term:\"\",\n      name: '',\n      description: '',\n      url: '',\n      image: '',\n      channel: 0,\n      category: 'location',\n      last_search_us: Date.now(),\n      live_search_typing: false,\n      vne: true,\n      dtri: false,\n      vnn: true,\n      thn: true,\n    }\n\t\tthis._create_metacontent = this._create_metacontent.bind(this)\n\t}\n\n  componentWillMount() {\n    this.props.createMetacontent()\n  }\n\n  _onChange(value) {\n    this.setState({\n      search_term: value\n    })\n    if (this.state.category != 'article') {\n      queryWikiMetacontents(value.value)\n        .then(value => {\n          this.setState({\n            name: value.name,\n            description: value.description,\n            url: value.url,\n            image: value.image,\n          })\n        })\n    } else {\n      queryNewsMetacontents(value.value)\n        .then(res => {\n          this.setState({\n            name: res.body.title,\n            description: res.body.desc,\n            url: value.value,\n            image: res.body.image,\n          })\n        })\n    }\n  }\n\n  _getEntities(inputText) {\n    let self = this\n\n    if (Date.now() - this.state.last_search_us < 500) {\n      this.state.search_fun.abort()\n    }\n\n    //get sites\n    let sites = []\n    if (self.state.vne) sites.push('vnexpress')\n    if (self.state.vnn) sites.push('vietnamnet')\n    if (self.state.dtri) sites.push('dantri')\n    if (self.state.thn) sites.push('thanhnien')\n    //end\n    let search_fun = (this.state.category != 'article') ? searchWikiMetacontents(inputText)\n                                                        : searchNewsMetacontents(inputText, sites)\n\n    self.setState({search_fun: search_fun})\n    self.setState({last_search_us: Date.now()})\n    return new Promise(function(resolve, reject) {\n      search_fun.end(function(err, res){\n        if (err)\n          reject(err)\n        let ret = res.body.map(function(entity) {\n          return (self.state.category == 'article') ? {value: entity.link, label: entity.title}\n                                                    : {value: entity, label: entity}\n        })\n        resolve({options: ret})\n      })\n    })\n  }\n\n  _print_fuck() {\n    console.log(\"Fuck\")\n  }\n\n  _setState(field, event) {\n    let object = {}\n    object[field] = (event.target.checked) ? event.target.checked : event.target.value\n    this.setState(object)\n  }\n\n  _checkBoxChange(field) {\n    let object = {}\n    object[field] = !this.state[field]\n    this.setState(object)\n  }\n\n\t_create_metacontent() {\n\t  let self = this\n    let {channels} = this.props.data\n\t\treturn (\n\t\t\t<div className='box-body' onKeyPress={Keypress(\"ctrl 1\", function() {\n          console.log(\"1\")\n        })}\n      >\n        <Panel header={\"Wikipedia search\"}>\n          <ControlLabel>Loại (1: Địa danh, 2: Nhân vật, 3: Tổ chức, 4: Bài viết</ControlLabel>\n          <FormControl componentClass=\"select\" bsStyle=\"primary\" ref={(ref) => self.mtCate = ref}\n                       onChange={self._setState.bind(self, 'category')} value={self.state.category}  tabIndex={'1'}>\n            <option value=\"location\">Địa danh</option>\n            <option value=\"person\">Nhân vật</option>\n            <option value=\"organization\">Tổ chức</option>\n            <option value=\"article\">Bài viết</option>\n          </FormControl>\n          {(self.state.category !== 'article')? null :\n            <FormGroup>\n              <Checkbox inline checked={self.state.vne} onChange={self._checkBoxChange.bind(self, 'vne')}>\n                VnExpress\n              </Checkbox>\n              {' '}\n              <Checkbox inline checked={self.state.dtri} onChange={self._checkBoxChange.bind(self, 'dtri')}>\n                Dantri\n              </Checkbox>\n              {' '}\n              <Checkbox inline checked={self.state.vnn} onChange={self._checkBoxChange.bind(self, 'vnn')}>\n                Vietnamnet\n              </Checkbox>\n              <Checkbox inline checked={self.state.thn} onChange={self._checkBoxChange.bind(self, 'thn')}>\n                Thannien\n              </Checkbox>\n            </FormGroup>\n          }\n          {' '}\n          <ControlLabel>Tìm kiếm</ControlLabel>\n          <Select.Async\n            value={self.state.search_term}\n            onChange={self._onChange.bind(self)}\n            loadOptions={self._getEntities.bind(self)}\n            minimumInput={3}\n            valueKey=\"value\" labelKey=\"label\"\n            backspaceRemoves={false}\n            ignoreAccents={false}\n            cache={false}\n            tabIndex={'1'}\n            autofocus={true}\n          />\n        </Panel>\n\n        <Panel header={\"Form\"}>\n          <Form>\n            <FormGroup controlId=\"formControlsTextarea\">\n              <ControlLabel>Name</ControlLabel>\n              <FormControl componentClass=\"textarea\" ref={(ref) => self.mtName = ref} placeholder=\"Name\"\n                           value={self.state.name} onChange={self._setState.bind(self, 'name')}/>\n            </FormGroup>\n            <FormGroup controlId=\"formControlsTextarea\">\n              <ControlLabel>Description</ControlLabel>\n              <FormControl componentClass=\"textarea\" ref={(ref) => self.mtDescription = ref} placeholder=\"Description\"\n                           value={self.state.description} onChange={self._setState.bind(self, 'description')}/>\n            </FormGroup>\n            <FormGroup controlId=\"formControlsTextarea\">\n              <ControlLabel>Image</ControlLabel>\n              <FormControl componentClass=\"textarea\" ref={(ref) => self.mtImage = ref} placeholder=\"Image\"\n                           value={self.state.image} onChange={self._setState.bind(self, 'image')}/>\n            </FormGroup>\n            <FormGroup controlId=\"formControlsTextarea\">\n              <ControlLabel>URL</ControlLabel>\n              <FormControl componentClass=\"textarea\" ref={(ref) => self.mtUrl = ref} placeholder=\"URL\"\n                           value={self.state.url} onChange={self._setState.bind(self, 'url')}/>\n            </FormGroup>\n            <ControlLabel>Loại</ControlLabel>\n            <FormControl componentClass=\"select\" bsStyle=\"primary\" ref={(ref) => self.mtCate = ref} placeholder=\"Loại\"\n                         onChange={self._setState.bind(self, 'category')} value={self.state.category} >\n              <option value=\"location\">Địa danh</option>\n              <option value=\"person\">Nhân vật</option>\n              <option value=\"organization\">Tổ chức</option>\n              <option value=\"article\">Bài viết</option>\n            </FormControl>\n            <FormGroup controlId=\"formControlsSelect\">\n              <ControlLabel>Kênh</ControlLabel>\n              <FormControl componentClass=\"select\" ref={(ref) => self.mtChannel = ref} placeholder=\"Kênh\"\n                           onChange={self._setState.bind(self, 'channel')} value={self.state.channel}>\n                {(!channels)? null : channels.map(function(channel, index) {\n                  return (<option key={channel.id} value={index}>{channel.name}</option>)\n                })}\n              </FormControl>\n            </FormGroup>\n\n            <Button bsStyle=\"primary\" onClick={self._submit.bind(self)} tabIndex=\"1\">\n                Submit\n              </Button>\n          </Form>\n        </Panel>\n\t\t\t</div>\n\t\t)\n\t}\n\n  _submit() {\n    let metacontent = {\n      name: this.state.name,\n      description: this.state.description,\n      url: this.state.url,\n      image: this.state.image,\n      channel: this.mtChannel.props.children[this.state.channel].key,\n      category: this.state.category,\n    }\n    this.props.submitMetacontent(metacontent)\n  }\n\n\trender() {\n\t\treturn this._create_metacontent()\n\t}\n}\n\nCreateMetacontent.propTypes = {\n\tdata : React.PropTypes.object,\n\tdispatch: React.PropTypes.func,\n  createMetacontent: React.PropTypes.func.isRequired,\n  submitMetacontent: React.PropTypes.func.isRequired,\n  editMetacontent: React.PropTypes.func.isRequired,\n}\n\n// // Which props do we want to inject, given the global state?\nfunction select (state) {\n  return {\n    data: state,\n  }\n}\n\n// Wrap the component to inject dispatch and state into it\nexport default connect(select, {\n  createMetacontent,\n  submitMetacontent,\n  editMetacontent,\n})(CreateMetacontent)\n"]}