{"version":3,"sources":["CreateMetacontent2.js"],"names":[],"mappings":"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","file":"CreateMetacontent2-compiled.js","sourcesContent":["import React, {Component} from 'react'\nimport {connect} from 'react-redux'\nimport {Row, Col, Image, ImageLoader, Table, ListGroup, ListGroupItem, Panel, Radio, Button, Checkbox, FormGroup, FormControl, ControlLabel, Form, FieldGroup} from 'react-bootstrap'\nimport {searchWikiMetacontents, searchNewsMetacontents, queryWikiMetacontents} from '../apis/Metacontents'\nimport {submitMetacontent, createMetacontent, editMetacontent} from '../actions'\nimport {queryNewsMetacontents} from \"../apis/Metacontents\";\nimport update from 'react-addons-update';\nvar ReactDOM = require('react-dom')\nimport hotkey from 'react-hotkey';\nvar Loading = require('react-loading')\nhotkey.activate();\n\nclass CreateMetacontent2 extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {search_term:\"\",\n      name: '',\n      description: '',\n      url: '',\n      image: '',\n      channel: 0,\n      category: 'location',\n      last_search_us: Date.now(),\n      live_search_typing: false,\n      vne: true,\n      dtri: true,\n      vnn: true,\n      thn: true,\n      searching: false,\n    }\n    this._create_metacontent = this._create_metacontent.bind(this)\n    this.hotkeyHandler = this.handleHotkey.bind(this)\n    this.handleOptionChange = this.handleOptionChange.bind(this)\n  }\n\n  handleHotkey(e) {\n    if ((e.key === '1' || e.key === '2' || e.key === '3' || e.key === '4') && e.ctrlKey) {\n      switch (e.key) {\n        case '1':\n          this.setState({category : 'location'})\n          break;\n        case '2':\n          this.setState({category : 'person'})\n          break;\n        case '3':\n          this.setState({category : 'organization'})\n          break;\n        case '4':\n          this.setState({category : 'article'})\n          break;\n        default:\n          return;\n      }\n    }\n  }\n\n  componentDidMount() {\n    hotkey.addHandler(this.hotkeyHandler)\n  }\n\n  componentWillUnmount() {\n    hotkey.removeHandler(this.hotkeyHandler)\n  }\n\n  componentWillMount() {\n    this.props.createMetacontent()\n  }\n\n  _onChange(value) {\n    this.setState({\n      search_term: value\n    })\n    let self = this\n    if (this.state.category != 'article') {\n      queryWikiMetacontents(value.value)\n        .then(value => {\n          this.setState({\n            name: value.name,\n            description: value.description,\n            url: value.url,\n            image: value.image,\n          })\n          ReactDOM.findDOMNode(self.submit_button).focus()\n        })\n    } else {\n      queryNewsMetacontents(value.value)\n        .then(res => {\n          this.setState({\n            name: res.body.title,\n            description: res.body.desc,\n            url: value.value,\n            image: res.body.image,\n          })\n          ReactDOM.findDOMNode(self.submit_button).focus()\n        })\n    }\n  }\n\n  _getEntities(inputText) {\n    let self = this\n\n    if (Date.now() - this.state.last_search_us < 500) {\n      this.state.search_fun.abort()\n    }\n\n    //get sites\n    let sites = []\n    if (self.state.vne) sites.push('vnexpress.net')\n    if (self.state.vnn) sites.push('vietnamnet.vn')\n    if (self.state.dtri) sites.push('dantri.com.vn')\n    if (self.state.thn) sites.push('thanhnien.vn')\n    //end\n    return (this.state.category != 'article') ? searchWikiMetacontents(inputText)\n        : searchNewsMetacontents(inputText, sites, false)\n  }\n\n  _setState(field, event) {\n    let object = {}\n    object[field] = (event.target.checked) ? event.target.checked : event.target.value\n    this.setState(object)\n  }\n\n  _checkBoxChange(field) {\n    let object = {}\n    object[field] = !this.state[field]\n    this.setState(object)\n  }\n\n  handleOptionChange(event) {\n    this.setState({category : event.target.value.toString()})\n  }\n\n  _create_metacontent() {\n    let self = this\n    let {channels} = this.props.data\n    return (\n      <div className='box-body'>\n        <Panel header={\"Tìm kiếm\"}>\n          <FormGroup controlId=\"formControlsSelect\">\n            <ControlLabel>Kênh</ControlLabel>\n            <FormControl componentClass=\"select\" ref={(ref) => self.mtChannel = ref} placeholder=\"Kênh\"\n                         onChange={self._setState.bind(self, 'channel')} value={self.state.channel}>\n              {(!channels)? null : channels.map(function(channel, index) {\n                return (<option key={channel.id} value={index}>{channel.name}</option>)\n              })}\n            </FormControl>\n          </FormGroup>\n          <ControlLabel>Loại</ControlLabel>\n          <FormGroup>\n            <Radio name=\"category\" value=\"location\" inline\n                   checked={'location' === self.state.category}\n                   onChange={self.handleOptionChange}>Địa danh</Radio>\n            <Radio name=\"category\" value=\"person\" inline\n                   checked={'person' === self.state.category}\n                   onChange={self.handleOptionChange}>Nhân vật</Radio>\n            <Radio name=\"category\" value=\"organization\" inline\n                   checked={\"organization\" === self.state.category}\n                   onChange={self.handleOptionChange}>Tổ chức</Radio>\n            <Radio name=\"category\" value=\"article\" inline\n                   checked={\"article\" === self.state.category}\n                   onChange={self.handleOptionChange}>Bài viết</Radio>\n          </FormGroup>\n\n          {(self.state.category !== 'article')? null :\n            <FormGroup>\n              <Checkbox inline checked={self.state.vne} onChange={self._checkBoxChange.bind(self, 'vne')}>\n                VnExpress\n              </Checkbox>\n              {' '}\n              <Checkbox inline checked={self.state.dtri} onChange={self._checkBoxChange.bind(self, 'dtri')}>\n                Dantri\n              </Checkbox>\n              {' '}\n              {/*<Checkbox inline checked={self.state.vnn} onChange={self._checkBoxChange.bind(self, 'vnn')}>*/}\n                {/*Vietnamnet*/}\n              {/*</Checkbox>*/}\n              {/*<Checkbox inline checked={self.state.thn} onChange={self._checkBoxChange.bind(self, 'thn')}>*/}\n                {/*Thannien*/}\n              {/*</Checkbox>*/}\n            </FormGroup>\n          }\n          {' '}\n          <FormGroup controlId=\"formControlsTextarea\">\n            <ControlLabel>Tìm kiếm</ControlLabel>\n            <FormControl type=\"text\"\n                         placeholder=\"Nhập để tìm kiếm\"\n                         value={this.state.search_term}\n                         onChange={self._setState.bind(self, 'search_term')}\n                         onKeyPress={(e) => {\n                           if (e.key === 'Enter') {\n                             self._search_metacontents()\n                           }\n                         }}\n                         autoFocus\n            />\n          </FormGroup>\n          <Button bsStyle=\"primary\" ref={(ref) => self.submit_button = ref}\n                  onClick={self._search_metacontents.bind(self)}\n                  tabIndex=\"1\"\n                  disabled={self.state.searching}\n          >\n            {(self.state.searching) ? \"Tìm kiếm...\" : \"Tìm kiếm\"}\n          </Button>\n        </Panel>\n\n        {(!self.state.searchResults) ? null :\n          <Panel>\n            <ListGroup>\n              {self.state.searchResults.map(metacontent => {\n                return (metacontent.loading)\n                  ? (\n                    <Loading key={metacontent.url} type=\"bars\" color=\"#e3e3e3\"/>)\n                  : (\n                  <ListGroupItem\n                    key={metacontent.url}\n                    onClick={self._submit.bind(self, metacontent)}\n                  >\n                    <Row className=\"show-grid\">\n                      <Col md={1}>\n                        <Image\n                          src={!(metacontent.image) || (metacontent.image.length == 0) ? \"https://d13yacurqjgara.cloudfront.net/users/771923/screenshots/2390842/gif-1.gif\"\n                            : (metacontent.image)}/>\n                      </Col>\n                      <Col md={11}>\n                        <b>\n                          {metacontent.name}\n                        </b>\n                        <br/>\n                        {metacontent.description}\n                      </Col>\n                    </Row>\n                  </ListGroupItem>\n                )\n              })}\n            </ListGroup>\n          </Panel>\n        }\n      </div>\n    )\n  }\n\n  _submit(metacontent) {\n    metacontent.channel = this.mtChannel.props.children[this.state.channel].key\n    metacontent.category = this.state.category\n    this.props.submitMetacontent(metacontent)\n  }\n\n  _search_metacontents() {\n    this.setState({searching: true})\n    this._getEntities(this.state.search_term)\n      .then(articles => {\n        let results = []\n        if (this.state.category != 'article') {\n          results = articles[1].map((article, index) => {\n            queryWikiMetacontents(article)\n              .then(value => {\n                this.setState({\n                  searchResults: update(this.state.searchResults, { [index]: { $set: {\n                    ...article,\n                    ...value,\n                    loading: false,\n                  }}})\n                })\n              })\n            return article\n          })\n          this.setState({searchResults : results.map(result => ({\n            ...result,\n            loading: true,\n          }))})\n        } else {\n          results = articles.body.map((article) => {\n            let result = {}\n            result.name = article.fields.title[0]\n            if (article.fields.description)\n              result.description = article.fields.description[0]\n            if (article.fields.url)\n              result.url = article.fields.url[0]\n            if (article.fields.image)\n              result.image = article.fields.image[0]\n            result.loading = false\n            return result\n          })\n          this.setState({searchResults : results})\n        }\n\n        this.setState({searching: false})\n      })\n  }\n\n  render() {\n    return this._create_metacontent()\n  }\n}\n\nCreateMetacontent2.propTypes = {\n  data : React.PropTypes.object,\n  dispatch: React.PropTypes.func,\n  createMetacontent: React.PropTypes.func.isRequired,\n  submitMetacontent: React.PropTypes.func.isRequired,\n  editMetacontent: React.PropTypes.func.isRequired,\n}\n\n// // Which props do we want to inject, given the global state?\nfunction select (state) {\n  return {\n    data: state,\n  }\n}\n\n// Wrap the component to inject dispatch and state into it\nexport default connect(select, {\n  createMetacontent,\n  submitMetacontent,\n  editMetacontent,\n})(CreateMetacontent2)\n"]}