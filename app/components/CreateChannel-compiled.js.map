{"version":3,"sources":["CreateChannel.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;AACA;;AACA;;;;IAEM,a;;;AACJ,yBAAa,KAAb,EAAoB;AAAA;;AAAA,uHACZ,KADY;;AAElB,UAAK,KAAL,GAAa;AACX,YAAM,EADK;AAEX,YAAM,EAFK;AAGX,eAAS;AAHE,KAAb;AAFkB;AAOnB;;;;8BAES,K,EAAO,K,EAAO;AACtB,UAAI,SAAS,EAAb;AACA,aAAO,KAAP,IAAiB,MAAM,MAAN,CAAa,OAAd,GAAyB,MAAM,MAAN,CAAa,OAAtC,GAAgD,MAAM,MAAN,CAAa,KAA7E;AACA,WAAK,QAAL,CAAc,MAAd;AACD;;;8BAES;AACR,UAAI,UAAU;AACZ,cAAM,KAAK,KAAL,CAAW,IADL;AAEZ,cAAM,KAAK,KAAL,CAAW,IAFL;AAGZ,iBAAS,KAAK,KAAL,CAAW;AAHR,OAAd;AAKA,WAAK,KAAL,CAAW,aAAX,CAAyB,OAAzB;AACD;;;6BAEQ;AACP,UAAI,OAAO,IAAX;AACA,aACE;AAAA;AAAA;AACE;AAAA;AAAA,YAAW,WAAU,oBAArB;AACE;AAAA;AAAA;AAAA;AAAA,WADF;AAEE,uEAAa,MAAK,MAAlB,EAAyB,aAAY,cAArC;AACa,sBAAU,KAAK,SAAL,CAAe,IAAf,CAAoB,IAApB,EAA0B,MAA1B,CADvB,EAC0D,OAAO,KAAK,KAAL,CAAW,IAD5E;AAFF,SADF;AAME;AAAA;AAAA,YAAW,WAAU,oBAArB;AACE;AAAA;AAAA;AAAA;AAAA,WADF;AAEE,uEAAa,MAAK,MAAlB,EAAyB,aAAY,aAArC;AACa,sBAAU,KAAK,SAAL,CAAe,IAAf,CAAoB,IAApB,EAA0B,SAA1B,CADvB,EAC6D,OAAO,KAAK,KAAL,CAAW,OAD/E;AAFF,SANF;AAWE;AAAA;AAAA,YAAW,WAAU,oBAArB;AACE;AAAA;AAAA;AAAA;AAAA,WADF;AAEE,uEAAa,MAAK,MAAlB,EAAyB,aAAY,qBAArC;AACa,sBAAU,KAAK,SAAL,CAAe,IAAf,CAAoB,IAApB,EAA0B,MAA1B,CADvB,EAC0D,OAAO,KAAK,KAAL,CAAW,IAD5E;AAFF,SAXF;AAgBI;AAAA;AAAA,YAAQ,SAAQ,SAAhB,EAA0B,SAAS,KAAK,OAAL,CAAa,IAAb,CAAkB,IAAlB,CAAnC;AAAA;AAAA;AAhBJ,OADF;AAsBD;;;EAjDyB,gBAAM,S;;AAoDlC;;;AACA,SAAS,MAAT,CAAiB,KAAjB,EAAwB;AACtB,SAAO;AACL,UAAM;AADD,GAAP;AAGD;;AAED;kBACe,yBAAQ,MAAR,EAAgB;AAC7B;AAD6B,CAAhB,EAEZ,aAFY,C","file":"CreateChannel-compiled.js","sourcesContent":["import React, {Component} from 'react'\nimport {Row, Col, Image, ImageLoader, Table, ListGroup, ListGroupItem, Panel, Radio, Button, Checkbox, FormGroup, FormControl, ControlLabel, Form, FieldGroup} from 'react-bootstrap'\nimport {connect} from 'react-redux'\nimport {submitChannel} from '../actions'\n\nclass CreateChannel extends React.Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      name: '',\n      icon: '',\n      channel: '',\n    }\n  }\n\n  _setState(field, event) {\n    let object = {}\n    object[field] = (event.target.checked) ? event.target.checked : event.target.value\n    this.setState(object)\n  }\n\n  _submit() {\n    let channel = {\n      icon: this.state.icon,\n      name: this.state.name,\n      channel: this.state.channel,\n    }\n    this.props.submitChannel(channel)\n  }\n\n  render() {\n    let self = this\n    return(\n      <Panel>\n        <FormGroup controlId=\"formControlsSelect\">\n          <ControlLabel>Tên</ControlLabel>\n          <FormControl type=\"text\" placeholder=\"Tên của kênh\"\n                       onChange={self._setState.bind(self, 'name')} value={self.state.name}/>\n        </FormGroup>\n        <FormGroup controlId=\"formControlsSelect\">\n          <ControlLabel>Số kênh</ControlLabel>\n          <FormControl type=\"text\" placeholder=\"Số của kênh\"\n                       onChange={self._setState.bind(self, 'channel')} value={self.state.channel}/>\n        </FormGroup>\n        <FormGroup controlId=\"formControlsSelect\">\n          <ControlLabel>Biểu tượng kênh</ControlLabel>\n          <FormControl type=\"text\" placeholder=\"Biểu tượng của kênh\"\n                       onChange={self._setState.bind(self, 'icon')} value={self.state.icon}/>\n        </FormGroup>\n          <Button bsStyle=\"primary\" onClick={self._submit.bind(self)}>\n            Submit\n          </Button>\n      </Panel>\n    )\n  }\n}\n\n// // Which props do we want to inject, given the global state?\nfunction select (state) {\n  return {\n    data: state,\n  }\n}\n\n// Wrap the component to inject dispatch and state into it\nexport default connect(select, {\n  submitChannel\n})(CreateChannel)\n"]}