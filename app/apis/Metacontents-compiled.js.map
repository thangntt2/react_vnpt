{"version":3,"sources":["Metacontents.js"],"names":[],"mappings":";;;;;;;;;;;;;;QAKgB,kB,GAAA,kB;QAYA,c,GAAA,c;QAMA,sB,GAAA,sB;QAcA,qB,GAAA,qB;QAYA,qB,GAAA,qB;QAKA,sB,GAAA,sB;QAOA,iB,GAAA,iB;QAaA,c,GAAA,c;QAMA,iB,GAAA,iB;;;;AAhFhB,IAAI,YAAY,QAAQ,iBAAR,CAAhB;AACA,IAAI,UAAU,QAAQ,YAAR,CAAd;AACA,QAAQ,aAAR,EAAuB,QAAvB;AACA,QAAQ,kBAAR;;AAEO,SAAS,kBAAT,GAA8B;AACpC,SAAO,sBAAY,UAAS,OAAT,EAAkB,MAAlB,EAA0B;AAC5C,cAAU,GAAV,CAAc;AACb,WAAK;AADQ,KAAd,EAEG,UAAS,GAAT,EAAc,QAAd,EAAwB,IAAxB,EAA8B;AAChC,UAAI,GAAJ,EACC,OAAO,GAAP;AACD,cAAQ,KAAK,KAAL,CAAW,IAAX,CAAR;AACA,KAND;AAOA,GARM,CAAP;AASA;;AAEM,SAAS,cAAT,CAAwB,EAAxB,EAA4B;AACjC,SAAO,QACJ,GADI,CACA,+CAA+C,EAD/C,EAEJ,IAFI,CAEC;AAAA,WAAY,SAAS,IAArB;AAAA,GAFD,CAAP;AAGD;;AAEM,SAAS,sBAAT,CAAgC,IAAhC,EAAsC;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAO,QACJ,GADI,CACA,8DAA8D,IAD9D,CAAP;AAED;;AAEM,SAAS,qBAAT,CAA+B,IAA/B,EAAqC;AAC1C,SAAO,sBAAY,UAAS,OAAT,EAAkB,MAAlB,EAA0B;AAC3C,cAAU,GAAV,CAAc;AACZ,WAAK,kEAAkE;AAD3D,KAAd,EAEG,UAAS,GAAT,EAAc,QAAd,EAAwB,IAAxB,EAA8B;AAC/B,UAAI,GAAJ,EACE,OAAO,GAAP;AACF,cAAQ,KAAK,KAAL,CAAW,IAAX,CAAR;AACD,KAND;AAOD,GARM,CAAP;AASD;;AAEM,SAAS,qBAAT,CAA+B,IAA/B,EAAqC;AAC1C,SAAO,QACJ,GADI,CACA,+DAA+D,IAD/D,CAAP;AAED;;AAEM,SAAS,sBAAT,CAAgC,IAAhC,EAAsC,KAAtC,EAA6C,MAA7C,EAAqD;AAC1D,SAAO,QACJ,GADI,CACA,mEAAmE,IAAnE,GACD,SADC,GACW,yBAAe,KAAf,CADX,GAED,YAFC,GAEc,MAHd,CAAP;AAID;;AAEM,SAAS,iBAAT,CAA2B,WAA3B,EAAwC;AAC7C,SAAO,MAAM,4CAA0C,YAAY,OAAtD,GAA8D,eAApE,EACL;AACE,YAAO,MADT;AAEE,UAAK,yBAAe,WAAf,CAFP;AAGE,UAAK,IAHP;AAIE,aAAS;AACP,sBAAgB;AADT;AAJX,GADK,EASF,IATE,CASG;AAAA,WAAY,SAAS,MAArB;AAAA,GATH,CAAP;AAUD;;AAEM,SAAS,cAAT,CAAwB,WAAxB,EAAqC;AAC1C,SAAO,QACJ,GADI,CACA,4CAA0C,YAAY,UAAtD,GAAiE,eADjE,EAEJ,IAFI,CAEC,yBAAe,WAAf,CAFD,CAAP;AAGD;;AAEM,SAAS,iBAAT,CAA2B,WAA3B,EAAwC;AAC7C,SAAO,MAAM,4CAA2C,YAAY,SAAvD,GAAiE,eAAvE,EACL;AACE,YAAQ,QADV;AAEE,UAAM,yBAAe;AACnB,UAAI,YAAY;AADG,KAAf,CAFR;AAKE,UAAK,IALP;AAME,aAAS;AACP,sBAAgB;AADT;AANX,GADK,EAWF,IAXE,CAWG;AAAA,WAAY,SAAS,MAArB;AAAA,GAXH,CAAP;AAYD","file":"Metacontents-compiled.js","sourcesContent":["var brrequest = require('browser-request')\nvar request = require('superagent')\nrequire('es6-promise').polyfill();\nrequire('isomorphic-fetch');\n\nexport function getAllMetacontents() {\n\treturn new Promise(function(resolve, reject) {\n\t\tbrrequest.get({\n\t\t\turi: 'http://52.163.214.52:8089/api/metacontents',\n\t\t}, function(err, response, body) {\n\t\t\tif (err)\n\t\t\t\treject(err)\n\t\t\tresolve(JSON.parse(body))\n\t\t})\n\t});\n}\n\nexport function getMetacontent(id) {\n  return request\n    .get('http://52.163.214.52:8089/api/metacontent/' + id)\n    .then(response => response.body)\n}\n\nexport function searchWikiMetacontents(name) {\n  // return new Promise(function(resolve, reject) {\n  //   request.get({\n  //     uri: 'http://52.163.214.52:8089/api/metacontents/search?entity=' + name,\n  //   }, function(err, response, body) {\n  //     if (err)\n  //       reject(err)\n  //     resolve(JSON.parse(body))\n  //   })\n  // })\n  return request\n    .get('http://52.163.214.52:8089/api/metacontents/search?entity=' + name)\n}\n\nexport function queryWikiMetacontents(name) {\n  return new Promise(function(resolve, reject) {\n    brrequest.get({\n      uri: 'http://52.163.214.52:8089/api/metacontents/query_wiki?entity=' + name,\n    }, function(err, response, body) {\n      if (err)\n        reject(err)\n      resolve(JSON.parse(body))\n    })\n  })\n}\n\nexport function queryNewsMetacontents(link) {\n  return request\n    .get('http://52.163.214.52:8089/api/metacontents/query_news?url=' + link)\n}\n\nexport function searchNewsMetacontents(name, sites, isFull) {\n  return request\n    .get('http://52.163.214.52:8089/api/metacontents/search_news?entity=' + name\n      + '&sites=' + JSON.stringify(sites)\n      + \"&full_res=\" + isFull)\n}\n\nexport function submitMetacontent(metacontent) {\n  return fetch('http://52.163.214.52:8089/api/channels/'+metacontent.channel+'/metacontents',\n    {\n      method:'POST',\n      body:JSON.stringify(metacontent),\n      json:true,\n      headers: {\n        'Content-Type': 'application/json',\n      },\n    })\n      .then(response => response.status)\n}\n\nexport function putMetacontent(metacontent) {\n  return request\n    .put('http://52.163.214.52:8089/api/channels/'+metacontent.channel_id+'/metacontents')\n    .send(JSON.stringify(metacontent))\n}\n\nexport function deleteMetacontent(metacontent) {\n  return fetch('http://52.163.214.52:8089/api/channels/'+ metacontent.ChannelId+'/metacontents',\n    {\n      method: 'DELETE',\n      body: JSON.stringify({\n        id: metacontent.id\n      }),\n      json:true,\n      headers: {\n        'Content-Type': 'application/json',\n      }\n    })\n      .then(response => response.status)\n}\n"]}